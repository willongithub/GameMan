#ifndef ADC_H_
#define ADC_H_


#define ADC0 0x00
#define ADC1 0x01
#define ADC2 0x02
#define ADC3 0x03
#define ADC4 0x04
#define ADC5 0x05
#define ADC6 0x06
#define ADC7 0x07
#define ADC_CLK2 0x00
#define ADC_CLK4 0x02
#define ADC_CLK8 0x03
#define ADC_CLK16 0x04
#define ADC_CLK32 0x05
#define ADC_CLK64 0x06
#define ADC_CLK128 0x07
#define FREE_RUNNING 0x00
#define ANALOG_COMPARATOR 0x01
#define ADC_REF_IN256 0x03
//#define ADC_SCALER 100
#define ADC_MAX 1024
#define ADC_VREF_INTERNAL 2.56


#define ADC_SET_REF(STATE) SET(ADMUX,(_BV(REFS1) | _BV(REFS0)),STATE)
#define ADC_SET_INPUT(STATE) SET(ADMUX,(_BV(MUX4) | _BV(MUX3) | _BV(MUX2) | _BV(MUX1) | _BV(MUX0)),STATE)
#define ADC_ENABLE(STATE) SET(ADCSRA,_BV(ADEN),STATE)
#define ADC_LEFT_ADJUST(STATE) SET(ADMUX,_BV(ADLAR),STATE)
#define ADC_INT_FLAG(STATE) SET(ADCSRA,_BV(ADIF),STATE)
#define ADC_START_CONVERSATION(STATE) SET(ADCSRA,_BV(ADSC),STATE)
#define ADC_AUTO_TRIGGER(STATE) SET(ADCSRA,_BV(ADATE),STATE)
#define ADC_INT_ENABLE(STATE) SET(ADCSRA,_BV(ADIE),STATE)
#define ADC_CLK(STATE) SET(ADCSRA,(_BV(ADPS2)|_BV(ADPS1)|_BV(ADPS0)),STATE)
#define ADC_AUTO_SOURCE(STATE) SET(SFIOR,(_BV(ADTS2)|_BV(ADTS1)|_BV(ADTS0)),STATE)


byte ADC_initialise(void);
float BAT_sense(void);

#endif
